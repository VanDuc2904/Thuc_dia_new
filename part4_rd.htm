<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Part 3: Chọn chủ đề cho đoạn văn</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        h2 { text-align: center; }
        h3 { margin-top: 30px; color: #333; }
        .topic-selector { text-align: center; margin-bottom: 20px; }
        .topic-selector label { font-size: 16px; margin-right: 10px; }
        .topic-selector select { padding: 5px; font-size: 16px; }
        .sentence { margin: 15px 0; padding: 10px; border: 1px solid #ccc; border-radius: 5px;
                   opacity: 0; transform: translateY(20px); transition: opacity 0.3s ease, transform 0.3s ease; }
        .sentence.show { opacity: 1; transform: translateY(0); }
        .sentence p { margin: 0 0 10px 0; font-weight: bold; }
        select { padding: 5px; font-size: 16px; }
        .correct-answer { color: green; font-size: 14px; margin-top: 5px; display: none; }
        .hidden { display: none; }
        #result { font-weight: bold; margin-top: 20px; text-align: center; }
        .buttons { text-align: center; margin-top: 20px; }
        button { padding: 10px 20px; margin: 0 10px; font-size: 16px; cursor: pointer; }
        #topics { transition: opacity 0.3s ease; }
        #reset-counter { text-align: center; margin-top: 10px; font-size: 14px; color: #555; }
        .loading { text-align: center; font-size: 16px; color: #555; }
    </style>
</head>
<body>
    <h2>Part 3: Chọn chủ đề cho đoạn văn</h2>
    <div class="topic-selector">
        <label for="topic-select">Chọn chủ đề: </label>
        <select id="topic-select" onchange="loadTopic()"></select>
    </div>
    <div id="topics"></div>
    <div class="buttons">
        <button onclick="checkAnswers()">Kiểm tra</button>
        <button onclick="showCorrectAnswers()">Xem đáp án</button>
        <button onclick="resetQuiz()">Thử lại</button>
        <button onclick="nextTopic()" id="next-topic" class="hidden">Chủ đề tiếp theo</button>
    </div>
    <p id="result"></p>
    <p id="reset-counter">Số lần reset: 0</p>

    <script>
        const topics = [
            {
                title: "Charles Dickens",
                sentences: [
                    { sentence: "The popularity of Dickens's works in our time remains a global phenomenon.", topic: "Dickens for Our Time" },
                    { sentence: "Shakespeare’s plays are difficult to understand and sometimes require the reader to struggle or think twice to figure out the character’s thoughts.", topic: "Difficulties for Modern Readers" },
                    { sentence: "Hamlet is a Renaissance tragedy written by Shakespeare. The play is very long and has plot twists that keep the reader guessing.", topic: "Keep the Reader Guessing" },
                    { sentence: "Dickens’ legacy is undeniable. His works have been translated and used in over 100 countries and are studied by most schoolchildren in the world.", topic: "The Influence of the Media" },
                    { sentence: "Dickens achieved success at a young age. His first novel, The Pickwick Papers, was published when he was only 24 and became a bestseller.", topic: "Dickens' Early Success" },
                    { sentence: "As Dickens's reputation grew, the question arose whether to preserve his legacy and make it live on. Dickens himself was always keen to make his mark and to maintain his uniqueness.", topic: "Trying to Protect His Property" },
                    { sentence: "To mark the 400th anniversary of Dickens’ death, there will be a number of events to help readers, and especially students, better understand his works.", topic: "Bring the Books to Life" }
                ]
            },
            {
                title: "William Shakespeare",
                sentences: [
                    { sentence: "Shakespeare’s works are performed worldwide in theaters and festivals.", topic: "Global Popularity" },
                    { sentence: "His plays often explore complex themes like love, power, and betrayal.", topic: "Complex Themes" },
                    { sentence: "Many of Shakespeare’s words and phrases are still used in modern English.", topic: "Linguistic Influence" },
                    { sentence: "Reading Shakespeare requires understanding Elizabethan English, which can be challenging.", topic: "Language Challenges" }
                ]
            }
        ];

        let currentTopicIndex = 0;
        let resetCount = 0;
        let currentSentences = [];

        function shuffle(array) {
            const a = [...array];
            for (let i = a.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [a[i], a[j]] = [a[j], a[i]];
            }
            return a;
        }

        function loadTopicSelector() {
            const sel = document.getElementById('topic-select');
            sel.innerHTML = topics.map((t, i) => `<option value="${i}">${t.title}</option>`).join('');
            sel.value = currentTopicIndex;
        }

        function loadTopic() {
            const topic = topics[currentTopicIndex];
            // Shuffle sentences freshly
            currentSentences = shuffle(topic.sentences);

            const container = document.getElementById('topics');
            container.innerHTML = `<h3>Part 3: Topic: ${topic.title}</h3>`;

            // Prepare answer options
            const allTopics = topic.sentences.map(s => s.topic);

            currentSentences.forEach((s, idx) => {
                const opts = shuffle(allTopics).map(o => `<option value="${o}">${o}</option>`).join('');
                const id = Math.random().toString(36).substr(2,5);
                container.innerHTML += `
                    <div class="sentence" id="sent-${idx}-${id}">
                        <p>Đoạn ${idx+1}: "${s.sentence}"</p>
                        <select id="sel-${idx}-${id}"><option value="">Chọn chủ đề</option>${opts}</select>
                        <p class="correct-answer" id="corr-${idx}-${id}"></p>
                    </div>`;
            });

            // Animate in
            setTimeout(() => Array.from(document.getElementsByClassName('sentence'))
                .forEach((el,i) => setTimeout(() => el.classList.add('show'), i*100)), 50);

            document.getElementById('reset-counter').textContent = `Số lần reset: ${resetCount}`;
            document.getElementById('result').textContent = '';
            document.getElementById('next-topic').classList.add('hidden');
        }

        function checkAnswers() {
            const res = document.getElementById('result');
            let allSel = true, allCorr = true;
            currentSentences.forEach((s, i) => {
                const selectEl = document.querySelector(`[id^=sel-${i}-]`);
                const corrEl = document.querySelector(`[id^=corr-${i}-]`);
                const val = selectEl.value;
                if (!val) allSel = false;
                if (val !== s.topic) {
                    allCorr = false;
                    corrEl.textContent = `Đáp án đúng: ${s.topic}`;
                    corrEl.style.display = 'block';
                } else corrEl.style.display = 'none';
            });
            if (!allSel) return res.textContent = 'Vui lòng chọn đáp án cho tất cả các đoạn!', res.style.color='red';
            if (allCorr) {
                res.textContent = 'Đúng hết! Chúc mừng bạn!';
                res.style.color = 'green';
                document.getElementById('next-topic').classList.remove('hidden');
            } else {
                res.textContent = 'Có đoạn sai, xem đáp án và thử lại nhé!';
                res.style.color = 'red';
            }
        }

        function showCorrectAnswers() {
            currentSentences.forEach((s, i) => {
                const corrEl = document.querySelector(`[id^=corr-${i}-]`);
                corrEl.textContent = `Đáp án đúng: ${s.topic}`;
                corrEl.style.display = 'block';
            });
        }

        function resetQuiz() {
            resetCount++;
            loadTopic();
        }

        function nextTopic() {
            currentTopicIndex = (currentTopicIndex + 1) % topics.length;
            resetCount = 0;
            loadTopicSelector();
            loadTopic();
        }

        // Initialize
        loadTopicSelector();
        loadTopic();
    </script>
</body>
</html>
