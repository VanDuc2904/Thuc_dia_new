<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sắp xếp từ</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        h2 {
            text-align: center;
        }

        .sentence-selector {
            text-align: center;
            margin-bottom: 20px;
        }

        .sentence-selector label {
            font-size: 16px;
            margin-right: 10px;
        }

        .sentence-selector select {
            padding: 5px;
            font-size: 16px;
        }

        .word-box {
            display: inline-block;
            padding: 10px;
            margin: 5px;
            background-color: #f0f0f0;
            cursor: move;
            border: 1px solid #ccc;
            touch-action: none; /* Ngăn cuộn mặc định khi kéo trên điện thoại */
        }

        #word-list, #drop-area {
            min-height: 60px;
            padding: 10px;
            margin: 20px 0;
            border: 2px dashed #ccc;
        }

        .correct-answer {
            color: green;
            font-size: 14px;
            margin-top: 10px;
            text-align: center;
            display: none;
        }

        #result {
            font-weight: bold;
            margin-top: 10px;
            text-align: center;
        }

        .buttons {
            text-align: center;
            margin-top: 20px;
        }

        button {
            padding: 10px 20px;
            margin: 0 10px;
            font-size: 16px;
            cursor: pointer;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <h2>Sắp xếp các từ theo thứ tự đúng</h2>
    <div class="sentence-selector">
        <label for="sentence-select">Chọn câu: </label>
        <select id="sentence-select" onchange="loadSentence()">
            <!-- Các câu sẽ được thêm động bằng JavaScript -->
        </select>
    </div>
    <div id="word-list"></div>
    <div id="drop-area">Kéo và thả các từ vào đây</div>
    <div class="correct-answer" id="correct-answer"></div>
    <div class="buttons">
        <button onclick="checkAnswer()">Kiểm tra</button>
        <button onclick="showCorrectAnswer()">Xem đáp án</button>
        <button onclick="reset()">Thử lại</button>
        <button onclick="nextSentence()" id="next-sentence" class="hidden">Câu tiếp theo</button>
    </div>
    <p id="result"></p>

    <script>
        // Danh sách các câu sắp xếp
       const sentences = [
            { id: 1, words: ["When he was young","If you lose this","﻿﻿He or she will ask for your name","You will also need to show your","He or she will make a copy"], correct: ["To enter the building","If you lose this","﻿﻿He or she will ask for your name","You will also need to show your","He or she will make a copy"] },
            { id: 14, words: ["To enter the building","If you lose this","﻿﻿He or she will ask for your name","You will also need to show your","He or she will make a copy"], correct: ["To enter the building","If you lose this","﻿﻿He or she will ask for your name","You will also need to show your","He or she will make a copy"] },
            { id: 15, words: ["When you arrive at the university","A member of staff will ask for your name ","He or she will enter your information","You can use this card to borrow books from","You will find these in material links on"], correct: ["When you arrive at the university","A member of staff will ask for your name ","He or she will enter your information","You can use this card to borrow books from","You will find these in material links on"] },
            { id: 16, words: ["The first step is to find out","The next one is to form a hypothesis","Then, you need to perform experiments to see ","You can also","In this way, you can add to"], correct: ["The first step is to find out","The next one is to form a hypothesis","Then, you need to perform experiments to see ","You can also","In this way, you can add to"] },
            { id: 17, words: ["The first step is to find", "The next one is to form a hypothesis","Then, you need to perform experiments to see","You can also compare your","In this way" ], correct: ["The first step is to find", "The next one is to form a hypothesis","Then, you need to perform experiments to see","You can also compare your","In this way"] },
            { id: 18, words: ["The first and most important thing is","In order to choose the right place","The most important of these to look at is "," Other factors to look at are the place","Such requirements of course depend on"], correct: ["The first and most important thing is","In order to choose the right place","The most important of these to look at is "," Other factors to look at are the place","Such requirements of course depend on"] },
            { id: 19, words: ["Go to the collection ", "Choose hire the cycle on the screen","Enter the code on the lock","When the light comes","When you finish your journey"], correct: ["Go to the collection ", "Choose hire the cycle on the screen","Enter the code on the lock","When the light comes","When you finish your journey"] },
            { id: 20, words: ["They left their home country","He started study at the school","Jay was very good at that","At one of these events","It was a major action movie"], correct: ["They left their home country","He started study at the school","Jay was very good at that","At one of these events","It was a major action movie"] },
            { id: 21, words: ["All you need is some earth","An old potato will have little roots","This colour means it is perfect for growing","When you've done this","With this care"], correct: ["All you need is some earth","An old potato will have little roots","This colour means it is perfect for growing","When you've done this","With this care"] },
            { id: 22, words: ["When you arrive","You will need to show this to a member","Inside the building","Before you look at the pictures","These activities will include playing"], correct: ["When you arrive","You will need to show this to a member","Inside the building","Before you look at the pictures","These activities will include playing"] },
            { id: 23, words: ["When he was a child","He then moved away from his home ","While he was at that club","After that, he moved to Italy and Spain,","Since he retired from playing,"], correct: ["When he was a child","He then moved away from his home ","While he was at that club","After that, he moved to Italy and Spain,","Since he retired from playing,"] }
       ];


        let currentSentenceIndex = 0;
        let shuffledWords = [];
        let userOrder = [];

        // Xáo trộn mảng
        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        // Tải danh sách câu vào dropdown
        function loadSentenceSelector() {
            const sentenceSelect = document.getElementById("sentence-select");
            sentenceSelect.innerHTML = "";
            sentences.forEach((sentence, index) => {
                const option = document.createElement("option");
                option.value = index;
                option.textContent = `Câu ${sentence.id}`;
                sentenceSelect.appendChild(option);
            });
            sentenceSelect.value = currentSentenceIndex;
        }

        // Tải từ lên giao diện
        function loadSentence() {
            currentSentenceIndex = parseInt(document.getElementById("sentence-select").value);
            const sentence = sentences[currentSentenceIndex];
            shuffledWords = shuffle([...sentence.words]);
            const wordList = document.getElementById("word-list");
            wordList.innerHTML = "";
            shuffledWords.forEach(word => {
                const div = document.createElement("div");
                div.className = "word-box";
                div.textContent = word;
                div.draggable = true;
                div.addEventListener("dragstart", dragStart);
                div.addEventListener("touchstart", touchStart, { passive: false });
                div.addEventListener("touchmove", touchMove, { passive: false });
                div.addEventListener("touchend", touchEnd, { passive: false });
                wordList.appendChild(div);
            });
            document.getElementById("drop-area").innerHTML = "Kéo và thả các từ vào đây";
            userOrder = [];
            document.getElementById("result").textContent = "";
            document.getElementById("correct-answer").textContent = "";
            document.getElementById("correct-answer").style.display = "none"; // Ẩn đáp án
            document.getElementById("next-sentence").classList.add("hidden");
        }

        // Xử lý kéo bằng chuột
        function dragStart(e) {
            e.dataTransfer.setData("text", e.target.textContent);
            e.dataTransfer.setData("source", e.target.parentElement.id);
        }

        // Xử lý kéo bằng cảm ứng
        let draggedElement = null;

        function touchStart(e) {
            e.preventDefault();
            draggedElement = e.target;
            draggedElement.style.opacity = "0.5";
        }

        function touchMove(e) {
            e.preventDefault();
            const touch = e.touches[0];
            draggedElement.style.position = "absolute";
            draggedElement.style.left = `${touch.pageX - draggedElement.offsetWidth / 2}px`;
            draggedElement.style.top = `${touch.pageY - draggedElement.offsetHeight / 2}px`;
        }

        function touchEnd(e) {
            e.preventDefault();
            const touch = e.changedTouches[0];
            const dropArea = document.getElementById("drop-area");
            const wordList = document.getElementById("word-list");
            const dropAreaRect = dropArea.getBoundingClientRect();
            const wordListRect = wordList.getBoundingClientRect();

            draggedElement.style.opacity = "1";
            draggedElement.style.position = "static";

            if (
                touch.pageX >= dropAreaRect.left &&
                touch.pageX <= dropAreaRect.right &&
                touch.pageY >= dropAreaRect.top &&
                touch.pageY <= dropAreaRect.bottom
            ) {
                if (draggedElement.parentElement.id === "word-list") {
                    const div = document.createElement("div");
                    div.className = "word-box";
                    div.textContent = draggedElement.textContent;
                    div.draggable = true;
                    div.addEventListener("dragstart", dragStart);
                    div.addEventListener("touchstart", touchStart, { passive: false });
                    div.addEventListener("touchmove", touchMove, { passive: false });
                    div.addEventListener("touchend", touchEnd, { passive: false });
                    dropArea.appendChild(div);
                    userOrder.push(draggedElement.textContent);
                    draggedElement.remove();
                }
            } else if (
                touch.pageX >= wordListRect.left &&
                touch.pageX <= wordListRect.right &&
                touch.pageY >= wordListRect.top &&
                touch.pageY <= wordListRect.bottom
            ) {
                if (draggedElement.parentElement.id === "drop-area") {
                    const div = document.createElement("div");
                    div.className = "word-box";
                    div.textContent = draggedElement.textContent;
                    div.draggable = true;
                    div.addEventListener("dragstart", dragStart);
                    div.addEventListener("touchstart", touchStart, { passive: false });
                    div.addEventListener("touchmove", touchMove, { passive: false });
                    div.addEventListener("touchend", touchEnd, { passive: false });
                    wordList.appendChild(div);
                    userOrder = userOrder.filter(w => w !== draggedElement.textContent);
                    draggedElement.remove();
                }
            }
            draggedElement = null;
        }

        // Xử lý thả cho #word-list (chuột)
        const wordList = document.getElementById("word-list");
        wordList.addEventListener("dragover", (e) => e.preventDefault());
        wordList.addEventListener("drop", (e) => {
            e.preventDefault();
            const word = e.dataTransfer.getData("text");
            const source = e.dataTransfer.getData("source");
            if (source === "drop-area") {
                const div = document.createElement("div");
                div.className = "word-box";
                div.textContent = word;
                div.draggable = true;
                div.addEventListener("dragstart", dragStart);
                div.addEventListener("touchstart", touchStart, { passive: false });
                div.addEventListener("touchmove", touchMove, { passive: false });
                div.addEventListener("touchend", touchEnd, { passive: false });
                wordList.appendChild(div);
                const dropArea = document.getElementById("drop-area");
                const draggedWord = Array.from(dropArea.children).find(w => w.textContent === word);
                if (draggedWord) {
                    draggedWord.remove();
                    userOrder = userOrder.filter(w => w !== word);
                }
            }
        });

        // Xử lý thả cho #drop-area (chuột)
        const dropArea = document.getElementById("drop-area");
        dropArea.addEventListener("dragover", (e) => e.preventDefault());
        dropArea.addEventListener("drop", (e) => {
            e.preventDefault();
            const word = e.dataTransfer.getData("text");
            const source = e.dataTransfer.getData("source");
            if (source === "word-list") {
                const div = document.createElement("div");
                div.className = "word-box";
                div.textContent = word;
                div.draggable = true;
                div.addEventListener("dragstart", dragStart);
                div.addEventListener("touchstart", touchStart, { passive: false });
                div.addEventListener("touchmove", touchMove, { passive: false });
                div.addEventListener("touchend", touchEnd, { passive: false });
                dropArea.appendChild(div);
                userOrder.push(word);
                const wordList = document.getElementById("word-list");
                const draggedWord = Array.from(wordList.children).find(w => w.textContent === word);
                if (draggedWord) draggedWord.remove();
            }
        });

        // Kiểm tra đáp án
        function checkAnswer() {
            const result = document.getElementById("result");
            const correctAnswerDiv = document.getElementById("correct-answer");
            const sentence = sentences[currentSentenceIndex];
            if (userOrder.length !== sentence.correct.length) {
                result.textContent = "Chưa đủ từ, hãy kéo hết các từ vào khu vực!";
                result.style.color = "red";
                correctAnswerDiv.textContent = `Đáp án đúng: ${sentence.correct.join(" / ")}`;
                correctAnswerDiv.style.display = "block";
            } else {
                const isCorrect = userOrder.every((word, index) => word === sentence.correct[index]);
                if (isCorrect) {
                    result.textContent = "Đúng!";
                    result.style.color = "green";
                    correctAnswerDiv.textContent = "";
                    correctAnswerDiv.style.display = "none";
                    document.getElementById("next-sentence").classList.remove("hidden");
                } else {
                    result.textContent = "Sai, thử lại!";
                    result.style.color = "red";
                    correctAnswerDiv.textContent = `Đáp án đúng: ${sentence.correct.join(" / ")}`;
                    correctAnswerDiv.style.display = "block";
                }
            }
        }

        // Hiển thị đáp án đúng khi nhấn "Xem đáp án"
        function showCorrectAnswer() {
            const correctAnswerDiv = document.getElementById("correct-answer");
            const sentence = sentences[currentSentenceIndex];
            correctAnswerDiv.textContent = `Đáp án đúng: ${sentence.correct.join(" / ")}`;
            correctAnswerDiv.style.display = "block";
        }

        // Chuyển sang câu tiếp theo
        function nextSentence() {
            currentSentenceIndex = (currentSentenceIndex + 1) % sentences.length;
            loadSentenceSelector();
            loadSentence();
        }

        // Reset lại giao diện
        function reset() {
            userOrder = [];
            document.getElementById("drop-area").innerHTML = "Kéo và thả các từ vào đây";
            document.getElementById("result").textContent = "";
            document.getElementById("correct-answer").textContent = "";
            document.getElementById("correct-answer").style.display = "none";
            loadSentence();
        }

        // Tải lần đầu
        loadSentenceSelector();
        loadSentence();
    </script>
</body>
</html>
